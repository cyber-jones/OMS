// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OMS.DoctorService.Data;

#nullable disable

namespace OMS.DoctorService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250316195608_Mag01")]
    partial class Mag01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OMS.DoctorService.Models.DoctorModel", b =>
                {
                    b.Property<Guid>("Doctor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CT_End")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CT_Start")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cell_Phone")
                        .HasColumnType("int");

                    b.Property<string>("Certificate_Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Clinic_Phone")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DOB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MLN")
                        .HasColumnType("int");

                    b.Property<string>("Middle_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NIN")
                        .HasColumnType("int");

                    b.Property<string>("Profile_Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Specialty_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Sub_Specialty_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Doctor_Id");

                    b.HasIndex("Specialty_Id");

                    b.HasIndex("Sub_Specialty_Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("OMS.DoctorService.Models.SpecialtyModel", b =>
                {
                    b.Property<Guid>("Specialty_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Specialty_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Specialty_Id");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("OMS.DoctorService.Models.DoctorModel", b =>
                {
                    b.HasOne("OMS.DoctorService.Models.SpecialtyModel", "Specialty")
                        .WithMany()
                        .HasForeignKey("Specialty_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OMS.DoctorService.Models.SpecialtyModel", "Sub_Specialty")
                        .WithMany()
                        .HasForeignKey("Sub_Specialty_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialty");

                    b.Navigation("Sub_Specialty");
                });
#pragma warning restore 612, 618
        }
    }
}
